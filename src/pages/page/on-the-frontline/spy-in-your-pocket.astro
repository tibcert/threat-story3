---
import Default from "../../../layouts/Default.astro"
import HomeIcon from "../../../icons/home-svgrepo-com.astro"
import NextIcon from "../../../icons/next-outline-svgrepo-com.astro"
import PrevIcon from "../../../icons/previous-outline-svgrepo-com.astro"

const title = "Spy In Your Pocket"

---
<Default title={title}>

	<div class=" flex flex-col snap-mandatory h-full snap-y w-screen items-center bg-slate-900">

		<section id="intro" class="snap-start w-lvw bg-slate-300 ">
			<div class=" bg-black flex flex-col justify-between overflow-hidden">
                <p class="text-slate-400 text-5xl text-center p-5 bg-slate-800 w-80 m-auto">On The Frontline</p>
				<h1 class="titleLeft font-bold text-9xl text-white content-center p-20 text-center" transition:name="heading4">{title}</h1>
			</div>
		</section>
        <section class="content bg-slate-900 w-full text-3xl font-oswald">
            <div class="mx-auto w-4/5 p-20 text-white" >
                <video autoplay loop  controls class=" z-10 w-full min-w-full min-h-full max-w-none">
                <source
                  src="https://tibcert.org/threat-story/images/paldon-vot.mp4"
                  type="video/mp4"
                />
                Your browser does not support the video tag.
              </video>
            </div>


            <div class="mx-auto w-4/5 p-10 text-white"> 
               <p>
                Targeted malware is not only delivered through emails or messages. It can also spread through the community by infecting trusted websites. Like a village well, websites for Tibetan media and organizations serve as vital resources for the community. If you poison the well, you poison the village. A “watering hole attack” describes this type of action online. Attackers get unauthorized access to websites and infect them with malware. When visitors visit the website they are at risk of their computer being infected by the malware and giving access to the attackers. The modus operandi of these attacks is particularly insidious, as compromised websites automatically download malware onto visitors’ devices without their knowledge. This method bypasses the need for attackers to target individuals individually, streamlining the process, and maximizing the impact.
               </p>
              <p>
                Many Tibetan websites have experienced watering hole attacks including media sites and official websites for key organizations such as the Central Tibetan Administration and the Offices of His Holiness the Dalai Lama.9 Community resource websites have also fallen victim including Tibetan Homes Foundation, and a Tibetan school in the diaspora.
              </p>
              <p>
                Tibet Times started as a Tibetan-language newspaper before evolving into a comprehensive media outlet, offering a Tibetan-language website and a mobile app to disseminate accurate information and breaking news about Tibet. In 2013, a scan for malicious ;omls on the TibetTimes website revealed a disturbing discovery: visitors to the site unwittingly opened a malicious domain, potentially exposing their devices to malware.
              </p>
               <blockquote class="testamonial mx-auto w-4/5  text-white bg-slate-800  flex justify-between relative items-center">
                <span class="text-9xl absolute z-0 text-slate-600">“</span>
                <div class="  text-slate-300 p-5 text-lg z-10  italic ">
                    <p>
                        “When this kind of attack happens to us, it not only tarnishes the credibility of Tibet Times among our viewers but more importantly it jeopardizes their safety as well through potential device infections. Naturally it also creates a worrisome and annoying situation in our working process.”
                    </p>
                    <p class="text-right text-xs">
                        - Tenzin Rabyang, Managing Director at Tibet Times
                    </p>   
                </div>
               
                </blockquote>
                <p>
                    Websites like TibetTimes that publish news on the human rights violations occurring inside Tibet, covering in TIbetan, English and Chinese, attracting visitors from Tibet and worldwide. However, these attacks not only harm the credibility and integrity of TibetTimes but also endanger website visitors. For individuals from Tibet, such attacks could have serious consequences, if found accessing or sharing content deemed sensitive by the PRC, individuals could face harassment, surveillance, or even legal repercussions.
                </p>
            </div>


        </section>

        <section id="intro" class="snap-start w-full bg-slate-500  ">
            <div class="flex space-between items-center w-11/12">
                <div class="  overflow-hidden w-2/5 flex justify-end">
                    <h1 class="titlePrev font-bold text-4xl text-white  p-20  inline-flex items-center"> Home <PrevIcon/> </h1>
                </div>
                <div class="w-1/5 h-40  rounded-lg  flex items-center justify-center">
                    <a href="/"><HomeIcon/></a>
                </div>
                <div class=" overflow-hidden w-2/5  flex justify-start">
                    
                    <h1 class="titleNext font-bold text-4xl text-white text-center p-20  inline-flex items-center"><NextIcon/> The Tibet Movement Goes Online </h1>
                </div>
            </div>
		</section>
        <section id="pagination" class="snap-start w-lvw bg-slate-900 h-80">
			
		</section>

	</div>
    <script> 
 
            import { gsap } from "gsap";
         import  ScrollTrigger  from "gsap/ScrollTrigger";
         gsap.registerPlugin(ScrollTrigger);
          
         const titlePrev = gsap.utils.toArray(".titlePrev");
         titlePrev.forEach((title,i)=>{
             gsap.from(title, {
             scrollTrigger:{
             trigger: title,
             start: "top 100%",
             end: "end 0%",
             scrub: true,
             markers: false
             },
             opacity: 0, x:-900,duration: 2,scale: 2 
         })})
     

         const titleNext = gsap.utils.toArray(".titleNext");
         titleNext.forEach((title,i)=>{
             gsap.from(title, {
             scrollTrigger:{
             trigger: title,
             start: "top 100%",
             end: "end 0%",
             scrub: true,
             markers: false
             },
             opacity: 0, x:900,duration: 2,scale: 2 
         })})
     


  
        
   
     </script>



	
</Default>